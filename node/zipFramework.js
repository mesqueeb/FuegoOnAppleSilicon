import { execSync } from 'node:child_process'
import { writeFileSync } from 'node:fs'
import { join } from 'node:path'
import { createRequire } from 'node:module'
import semver from 'semver'

const require = createRequire(import.meta.url)
const { version } = require('../package.json')

const nextVersion = semver.inc(version, 'patch')
const frameworkPath = join(process.cwd(), './build/fuego.xcframework')
const zipFilename = `Fuego-${nextVersion}.xcframework.zip`
const zipPath = join(process.cwd(), `./build/${zipFilename}`)
const packageSwiftPath = join(process.cwd(), 'Package.swift')

execSync(`zip -r ${zipPath} ${frameworkPath}`, { stdio: 'inherit' })

const zipChecksum = execSync(`swift package compute-checksum ${zipPath}`).toString().trim()

const packageSwiftContent = `
// swift-tools-version: 5.10
// The swift-tools-version declares the minimum version of Swift required to build this package.
// =================================================================
// || Do not edit! This file is generated by node/zipFramework.js ||
// =================================================================

import PackageDescription

let package = Package(
  name: "FuegoOnAppleSilicon",
  platforms: [.iOS(.v14), .macOS(.v13), .visionOS(.v1)],
  products: [
    // Products define the executables and libraries a package produces, making them visible to other packages.
    .library(
      name: "FuegoOnAppleSilicon",
      targets: ["FuegoSwiftBridge", "FuegoCBridge"]
		),
  ],
  targets: [
    // Targets are the basic building blocks of a package, defining a module or a test suite.
    // Targets can depend on other targets in this package and products from dependencies.
    .binaryTarget(
      name: "FuegoXCFramework",
      url: "https://github.com/mesqueeb/FuegoOnAppleSilicon/releases/download/v${nextVersion}/${zipFilename}",
      checksum: "${zipChecksum}"
    ),
    .target(
      name: "FuegoCBridge",
      dependencies: ["FuegoXCFramework"],
      path: "FuegoOnAppleSilicon/CBridge"
		),
    .target(
      name: "FuegoSwiftBridge",
      dependencies: ["FuegoCBridge"],
      path: "FuegoOnAppleSilicon/SwiftBridge"
		),
  ]
)
`

// Write the updated Package.swift
writeFileSync(packageSwiftPath, packageSwiftContent)

// Commit changes
execSync(`git add .`, { stdio: 'inherit' })
execSync(`git commit -m "chore: Prep version ${nextVersion}"`, { stdio: 'inherit' })
